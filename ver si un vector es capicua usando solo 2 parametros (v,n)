#include <iostream>

using namespace std;

bool esCapicua(int v[], int n) {
    int izq = -1, der = -1;
    int i = 0;

    while(i < n / 2) {
        if(izq == -1 && v[i] != -1) {
            izq = i;
        }
        ++i;
    }

    i = n - 1;

    while(i >= n / 2) {
        if(der == -1 && v[i] != -1) {
            der = i;
        }
        --i;
    }

    if(n % 2 == 1 && der == -1 || izq == -1) {
        return true;
    }
    if( n % 2 == 0 && der - izq == 1 && v[izq] == v[der]) {
        return true;
    }

    if(v[izq] == v[der]) {
        v[izq] = v[der] = -1;
        return esCapicua(v, n);
    } else {
        return false;
    }
}

int main()
{
    int v[200];
    int n;

    cin >> n;
    for(int i = 0; i < n; ++i)
        cin >> v[i];

    if(esCapicua(v, n)) cout << "Si es cap\n";
    else cout << "No es cap\n";
    return 0;
}
